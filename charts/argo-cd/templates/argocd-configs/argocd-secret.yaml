{{- if .Values.configs.secret.createSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: argocd-secret
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.server.name "name" "secret") | nindent 4 }}
  {{- if .Values.configs.secret.annotations }}
  annotations:
  {{- range $key, $value := .Values.configs.secret.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
type: Opaque
{{- if or .Values.configs.secret.githubSecret (or .Values.configs.secret.gitlabSecret .Values.configs.secret.bitbucketUUID .Values.configs.secret.bitbucketServerSecret .Values.configs.secret.gogsSecret .Values.configs.secret.argocdServerAdminPassword .Values.configs.secret.argocdServerTlsConfig .Values.configs.secret.extra) }}
# Setting a blank data again will wipe admin password/key/cert
{{- if .Values.configs.secret.encrypt }}
data:
{{- else }}
stringData:
{{- end }}
  {{- if .Values.configs.secret.githubSecret }}
  webhook.github.secret: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.githubSecret | b64enc }} {{ else }} {{ .Values.configs.secret.githubSecret }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.gitlabSecret }}
  webhook.gitlab.secret: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.gitlabSecret | b64enc }} {{ else }} {{ .Values.configs.secret.gitlabSecret }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.bitbucketServerSecret }}
  webhook.bitbucketserver.secret: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.bitbucketServerSecret | b64enc }} {{ else }} {{ .Values.configs.secret.bitbucketServerSecret }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.bitbucketUUID }}
  webhook.bitbucket.uuid: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.bitbucketUUID | b64enc }} {{ else }} {{ .Values.configs.secret.bitbucketUUID }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.gogsSecret }}
  webhook.gogs.secret: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.gogsSecret | b64enc }} {{ else }} {{ .Values.configs.secret.gogsSecret }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.argocdServerTlsConfig }}
  tls.key: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.argocdServerTlsConfig.key | b64enc }} {{ else }} {{ .Values.configs.secret.argocdServerTlsConfig.key }} {{ end }}
  tls.crt: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.argocdServerTlsConfig.crt | b64enc }} {{ else }} {{ .Values.configs.secret.argocdServerTlsConfig.crt }} {{ end }}
  {{- end }}
  {{- if .Values.configs.secret.argocdServerAdminPassword }}
  admin.password: {{- if .Values.configs.secret.encrypt }}{{ .Values.configs.secret.argocdServerAdminPassword | b64enc }} {{ else }} {{ .Values.configs.secret.argocdServerAdminPassword }} {{ end }}
  admin.passwordMtime: {{- if .Values.configs.secret.encrypt }}{{ default (date "2006-01-02T15:04:05Z" now) .Values.configs.secret.argocdServerAdminPasswordMtime | b64enc }} {{ else }} {{ default (date "2006-01-02T15:04:05Z" now) .Values.configs.secret.argocdServerAdminPasswordMtime }} {{ end }}
  {{- end }}
  {{- range $key, $value := .Values.configs.secret.extra }}
  {{- if .Values.configs.secret.encrypt }}
  {{ $key }}: {{ $value | b64enc }}
  {{- else }}
  {{ $key }}: {{ $value}}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}
